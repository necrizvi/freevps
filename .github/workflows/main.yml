name: Windows - RustDesk

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 9999
    
    steps:
      - name: Generate RustDesk Credentials
        run: |
          $randomId = Get-Random -Minimum 100000 -Maximum 999999
          $randomPassword = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 12 | % {[char]$_})
          echo "RUSTDESK CREDENTIALS - SAVE THESE:" >> rustdesk_credentials.log
          echo "ID: $randomId" >> rustdesk_credentials.log
          echo "Password: $randomPassword" >> rustdesk_credentials.log
          echo "==================================" >> rustdesk_credentials.log
          
          # Store credentials in environment for later use
          echo "RUSTDESK_ID=$randomId" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "RUSTDESK_PASSWORD=$randomPassword" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install RustDesk
        run: |
          Invoke-WebRequest -Uri "https://github.com/rustdesk/rustdesk/releases/download/1.2.1/rustdesk-1.2.1-x86_64.exe" -OutFile "rustdesk.exe"
          Start-Process -FilePath "rustdesk.exe" -ArgumentList "/VERYSILENT", "/NORESTART" -Wait
          Remove-Item -Path "rustdesk.exe" -Force

      - name: Configure RustDesk
        run: |
          # Set RustDesk password
          & "C:\Program Files\RustDesk\rustdesk.exe" --password $env:RUSTDESK_PASSWORD
          
          # Allow through firewall
          netsh advfirewall firewall add rule name="RustDesk" dir=in action=allow program="C:\Program Files\RustDesk\rustdesk.exe" enable=yes
          
          # Start RustDesk service
          net start RustDesk 2>$null || sc create RustDesk binPath= "C:\Program Files\RustDesk\rustdesk.exe" start= auto

      - name: Install Python Dependencies
        run: |
          pip install pyautogui --quiet
          pip install psutil --quiet

      - name: Install Additional Software
        run: |
          # Install Telegram
          Invoke-WebRequest -Uri "https://telegram.org/dl/desktop/win64" -OutFile "C:\Users\Public\Desktop\Telegram.exe"
          Start-Process -FilePath "C:\Users\Public\Desktop\Telegram.exe" -ArgumentList "/VERYSILENT", "/NORESTART" -Wait
          Remove-Item -Path "C:\Users\Public\Desktop\Telegram.exe" -Force
          
          # Install WinRAR
          Invoke-WebRequest -Uri "https://www.rarlab.com/rar/winrar-x64-621.exe" -OutFile "C:\Users\Public\Desktop\Winrar.exe"
          Start-Process -FilePath "C:\Users\Public\Desktop\Winrar.exe" -ArgumentList "/S" -Wait
          Remove-Item -Path "C:\Users\Public\Desktop\Winrar.exe" -Force
          
          # Download VMQuickConfig
          Invoke-WebRequest -Uri "https://github.com/chieunhatnang/VM-QuickConfig/releases/download/1.6.1/VMQuickConfig.exe" -OutFile "C:\Users\Public\Desktop\VMQuickConfig.exe"

      - name: Clean Desktop Shortcuts
        run: |
          Remove-Item -Path "C:\Users\Public\Desktop\Epic Games Launcher.lnk" -ErrorAction SilentlyContinue
          Remove-Item -Path "C:\Users\Public\Desktop\Unity Hub.lnk" -ErrorAction SilentlyContinue

      - name: Set Admin Password
        run: |
          $password = "@#admin4321"
          $securePassword = ConvertTo-SecureString -String $password -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $securePassword

      - name: Configure System Settings
        run: |
          # Show Computer icon on desktop
          reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel" /v "{20D04FE0-3AEA-1069-A2D8-08002B30309D}" /t REG_DWORD /d 0 /f
          
          # Set timezone to Sri Lanka
          tzutil /s "Sri Lanka Standard Time"

      - name: Display RustDesk Credentials
        run: |
          echo "=== RUSTDESK ACCESS CREDENTIALS ==="
          echo "ID: $env:RUSTDESK_ID"
          echo "Password: $env:RUSTDESK_PASSWORD"
          echo "==================================="
          echo "VM is ready for remote connection!"
          echo "The runner will stay active for 9999 minutes"

      - name: Keep Runner Alive
        run: |
          # Start RustDesk
          Start-Process -FilePath "C:\Program Files\RustDesk\rustdesk.exe"
          
          # Keep-alive script
          $keepAliveScript = @"
          import time
          import psutil
          import subprocess
          
          # Ensure RustDesk is running
          def ensure_rustdesk_running():
              rustdesk_running = any('rustdesk' in p.name().lower() for p in psutil.process_iter())
              if not rustdesk_running:
                  subprocess.Popen(['C:\\Program Files\\RustDesk\\rustdesk.exe'])
          
          # Keep the runner alive
          print("Keeping runner alive for remote access...")
          while True:
              ensure_rustdesk_running()
              time.sleep(60)
          "@
          
          $keepAliveScript | Out-File -FilePath "keep_alive.py" -Encoding utf8
          python keep_alive.py
