name: Windows - RustDesk Server

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building RustDesk Server
    runs-on: windows-latest
    timeout-minutes: 9999
    
    steps:
      - name: Generate RustDesk Credentials
        run: |
          $id = Get-Random -Minimum 100000 -Maximum 999999
          $password = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 8 | % {[char]$_})
          echo "RUSTDESK_ID=$id" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "RUSTDESK_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "‚úÖ RustDesk Credentials Generated"
          echo "ID: $id"
          echo "Password: $password"

      - name: Download RustDesk (with timeout)
        run: |
          Invoke-WebRequest -Uri "https://github.com/rustdesk/rustdesk/releases/download/1.2.1/rustdesk-1.2.1-x86_64.exe" -OutFile "rustdesk-setup.exe" -TimeoutSec 300
          echo "‚úÖ RustDesk downloaded"

      - name: Install RustDesk (with timeout protection)
        run: |
          $process = Start-Process -FilePath "rustdesk-setup.exe" -ArgumentList "/VERYSILENT", "/NORESTART", "/SUPPRESSMSGBOXES" -PassThru
          # Wait max 5 minutes for installation
          $process | Wait-Process -Timeout 300 -ErrorAction SilentlyContinue
          if (!$process.HasExited) {
              $process | Stop-Process -Force
              echo "‚ö†Ô∏è Installation timed out, but continuing..."
          }
          Remove-Item -Path "rustdesk-setup.exe" -Force -ErrorAction SilentlyContinue
          echo "‚úÖ RustDesk installation attempted"

      - name: Quick Configuration
        run: |
          # Set firewall rule
          netsh advfirewall firewall add rule name="RustDesk" dir=in action=allow program="C:\Program Files\RustDesk\rustdesk.exe" enable=yes
          
          # Set admin password
          $securePassword = ConvertTo-SecureString "@#Disala123456" -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $securePassword
          
          echo "‚úÖ Basic configuration complete"

      - name: Start RustDesk and Display Credentials
        run: |
          # Start RustDesk directly without waiting
          Start-Process -FilePath "C:\Program Files\RustDesk\rustdesk.exe" -WindowStyle Hidden
          
          echo "=========================================="
          echo "üöÄ RUSTDESK SERVER READY FOR CONNECTION"
          echo "=========================================="
          echo "ID: $env:RUSTDESK_ID"
          echo "Password: $env:RUSTDESK_PASSWORD"
          echo "Admin User: freevpsadmin"
          echo "Admin Pass: freevps@12345"
          echo "=========================================="
          echo "‚è∞ Server is ready for immediate connection"
          echo "=========================================="

      - name: Keep Alive
        run: |
          echo "üîÑ Keeping server alive for remote access..."
          # Simple infinite loop to keep runner active
          while ($true) {
              Start-Sleep -Seconds 60
              echo "‚úÖ Runner still active - $(Get-Date)"
          }
